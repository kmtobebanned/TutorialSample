"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[272],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),p=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(a),d=n,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return a?r.createElement(h,i(i({ref:t},s),{},{components:a})):r.createElement(h,i({ref:t},s))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},419:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:3},i="Code Snippet Example",l={unversionedId:"tutorial-basics/snippet-example",id:"tutorial-basics/snippet-example",title:"Code Snippet Example",description:"Lorem Ipsum is simply dummy text of the printing and typesetting industry.",source:"@site/docs/tutorial-basics/snippet-example.mdx",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/snippet-example",permalink:"/TutorialSample/docs/tutorial-basics/snippet-example",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/snippet-example.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"[tutorial-template-2]",permalink:"/TutorialSample/docs/tutorial-basics/tutorial-template-2"},next:{title:"Tutorial - Extras",permalink:"/TutorialSample/docs/category/tutorial---extras"}},c={},p=[{value:"ATutorialSampleCharacter::BeginTouch",id:"atutorialsamplecharacterbegintouch",level:3},{value:"ATutorialSampleCharacter::EndTouch",id:"atutorialsamplecharacterendtouch",level:3},{value:"ATutorialSampleCharacter::MoveForward",id:"atutorialsamplecharactermoveforward",level:3},{value:"ATutorialSampleCharacter::MoveRight",id:"atutorialsamplecharactermoveright",level:3},{value:"UTP_WeaponComponent::EndPlay",id:"utp_weaponcomponentendplay",level:3},{value:"UTP_WeaponComponent::AttachWeapon",id:"utp_weaponcomponentattachweapon",level:3}],s={toc:p};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"code-snippet-example"},"Code Snippet Example"),(0,n.kt)("p",null,"Lorem Ipsum is simply dummy text of the printing and typesetting industry."),(0,n.kt)("h3",{id:"atutorialsamplecharacterbegintouch"},"[ATutorialSampleCharacter::BeginTouch]"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"{4} showLineNumbers","{4}":!0,showLineNumbers:!0},"void ATutorialSampleCharacter::BeginTouch(const ETouchIndex::Type FingerIndex,\n                                          const FVector Location) {\n  if (TouchItem.bIsPressed == true) {\n    return;\n  }\n  if ((FingerIndex == TouchItem.FingerIndex) && (TouchItem.bMoved == false)) {\n    OnPrimaryAction();\n  }\n  TouchItem.bIsPressed = true;\n  TouchItem.FingerIndex = FingerIndex;\n  TouchItem.Location = Location;\n  TouchItem.bMoved = false;\n}\n")),(0,n.kt)("h3",{id:"atutorialsamplecharacterendtouch"},"[ATutorialSampleCharacter::EndTouch]"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"showLineNumbers",showLineNumbers:!0},"void ATutorialSampleCharacter::EndTouch(const ETouchIndex::Type FingerIndex,\n                                        const FVector Location) {\n  if (TouchItem.bIsPressed == false) {\n    return;\n  }\n  TouchItem.bIsPressed = false;\n}\n")),(0,n.kt)("h3",{id:"atutorialsamplecharactermoveforward"},"[ATutorialSampleCharacter::MoveForward]"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"void ATutorialSampleCharacter::MoveForward(float Value) {\n  if (Value != 0.0f) {\n    // add movement in that direction\n    AddMovementInput(GetActorForwardVector(), Value);\n  }\n}\n")),(0,n.kt)("h3",{id:"atutorialsamplecharactermoveright"},"[ATutorialSampleCharacter::MoveRight]"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"void ATutorialSampleCharacter::MoveRight(float Value) {\n  if (Value != 0.0f) {\n    // add movement in that direction\n    AddMovementInput(GetActorRightVector(), Value);\n  }\n}\n")),(0,n.kt)("h3",{id:"utp_weaponcomponentendplay"},"[UTP_WeaponComponent::EndPlay]"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"void UTP_WeaponComponent::EndPlay(const EEndPlayReason::Type EndPlayReason) {\n  if (Character != nullptr) {\n    // Unregister from the OnUseItem Event\n    Character->OnUseItem.RemoveDynamic(this, &UTP_WeaponComponent::Fire);\n  }\n}\n")),(0,n.kt)("h3",{id:"utp_weaponcomponentattachweapon"},"[UTP_WeaponComponent::AttachWeapon]"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'void UTP_WeaponComponent::AttachWeapon(\n    ATutorialSampleCharacter *TargetCharacter) {\n  Character = TargetCharacter;\n  if (Character != nullptr) {\n    // Attach the weapon to the First Person Character\n    FAttachmentTransformRules AttachmentRules(EAttachmentRule::SnapToTarget,\n                                              true);\n    GetOwner()->AttachToComponent(Character->GetMesh1P(), AttachmentRules,\n                                  FName(TEXT("GripPoint")));\n\n    // Register so that Fire is called every time the character tries to use the\n    // item being held\n    Character->OnUseItem.AddDynamic(this, &UTP_WeaponComponent::Fire);\n  }\n}\n')))}u.isMDXComponent=!0}}]);